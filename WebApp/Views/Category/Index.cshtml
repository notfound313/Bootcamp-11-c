@model List<Category>;

@if (TempData["Success"] is not null) 
{
  <p id="success-message" style="display: none;">@TempData["Success"]</p>
}
@if (TempData["Error"] is not null) 
{
    
  <p id="error-message" style="display: none;">@TempData["Error"]</p>
}
@{
    ViewData["Title"] = "Category";
}

<button type="button" class="btn btn-primary" id="liveToastBtn">Show live toast</button>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <img src="..." class="rounded me-2" alt="...">
      <strong class="me-auto">Bootstrap</strong>
      <small>11 mins ago</small>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Hello, world! This is a toast message.
    </div>
  </div>
</div>
<br>
<a class="btn btn-info" asp-controller="Category" asp-action="Create">Create</a>
<h1 class="mb-4">@ViewData["Title"]</h1>
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th scope="col">Id </th>
            <th scope="col">Name Category</th>
            <th scope="col">Description </th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.CategoryId</td>
                <td>@item.CategoryName</td>
                <td>@item.Description</td>
                <td>
                    <a class="btn btn-warning" asp-controller="Category" asp-action="Update"
                       asp-route-id="@item.CategoryId" >Update</a>
                    <a class="btn btn-danger" asp-controller="Category" asp-route-id="@item.CategoryId" asp-action="Delete">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
  const toastTrigger = document.getElementById('liveToastBtn')
const toastLiveExample = document.getElementById('liveToast')

if (toastTrigger) {
  const toastBootstrap = bootstrap.Toast.getOrCreateInstance(toastLiveExample)
  toastTrigger.addEventListener('click', () => {
    toastBootstrap.show()
  })
}
</script>
